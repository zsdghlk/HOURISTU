"use client";
import React from "react";
import { LawProvider, useLawMode } from "@/features/accessible-law/LawContext";
import HeaderPortal from "@/features/accessible-law/HeaderPortal";
import { usePathname } from "next/navigation";
import { ROKUPO } from "@/lib/rokupo";

function useCurrentLawTitle() {
  const pathname = usePathname();
  const lawId = pathname?.split("/").filter(Boolean).pop() ?? "";
  const hit = ROKUPO.find(x => x.lawId === lawId);
  return hit?.title ?? "";
}

function LawTabsInline() {
  const { mode, setMode } = useLawMode();
  const lawTitle = useCurrentLawTitle();
  const btn = (label: string, key: "original" | "easy") => (
    <button
      onClick={() => setMode(key)}
      className={`px-3 h-8 text-sm flex items-center justify-center rounded-xl font-bold shadow ${mode === key ? "bg-blue-600 text-white" : "bg-gray-200 text-gray-800 hover:bg-gray-300"}`}
      aria-pressed={mode === key}
    >
      {label}
    </button>
  );

  return (
    <div className="inline-flex items-center">
      {/* Home の後ろにだけ 1本目の区切り */}
      <span className="mx-3 text-gray-400">｜</span>
      {/* タイトル */}
      {lawTitle && <span className="law-current-title">{lawTitle}</span>}
      {/* タイトルとボタンの間に 2本目の区切り */}
      <span className="mx-3 text-gray-400">｜</span>
      {/* 原文／分かりやすい */}
      <div className="inline-flex items-center gap-3">
        {btn("原文", "original")}
        {btn("分かりやすい", "easy")}
      </div>
    </div>
  );
}

export default function LawLayout({ children }: { children: React.ReactNode }) {
  return (
    <LawProvider>
      <HeaderPortal>
        <LawTabsInline />
      </HeaderPortal>
      <div className="px-4 pb-6 pt-2">{children}</div>
    </LawProvider>
  );
}
