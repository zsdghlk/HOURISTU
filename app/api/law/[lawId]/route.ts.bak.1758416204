import { NextResponse } from "next/server";
import { fetchLawJson, toArray, renderArticleHtml } from "@/lib/egov";

/** Preamble(前文) → HTML */
function renderPreambleHtml(law: any): string {
  const pre = law?.LawBody?.Preamble;
  if (!pre) return "";
  const paras = toArray(pre.Paragraph);
  if (!paras.length) return "";
  const body = paras.map((p: any) => {
    const ss = toArray(p?.ParagraphSentence?.Sentence);
    const text = ss.map((s: any) => (typeof s === "string" ? s : s?._ || "")).join("");
    return `<div class="mb-3 leading-relaxed">${text}</div>`;
  }).join("");
  return body
    ? `<header class="mb-2"><h2 class="text-xl font-semibold">前文</h2></header>${body}`
    : "";
}

/** ツリーを辿って Article を全部フラットに収集（順序維持） */
function collectArticles(node: any): any[] {
  if (!node) return [];
  let acc: any[] = [];
  if (node.Article) acc = acc.concat(toArray(node.Article));
  // 深い入れ子すべて辿る
  const kids = [
    ...toArray(node.Part),
    ...toArray(node.Division),
    ...toArray(node.Subsection),
    ...toArray(node.Chapter),
    ...toArray(node.Section),
  ];
  for (const k of kids) acc = acc.concat(collectArticles(k));
  return acc;
}

export async function GET(_req: Request, ctx: { params: Promise<{ lawId: string }> }) {
  try {
    const { lawId } = await ctx.params;

    const law = await fetchLawJson(lawId);

    const title =
      law?.LawBody?.LawTitle ||
      law?.LawTitle ||
      law?.LawName ||
      law?.title ||
      "（無題の法令）";

    // 前文
    let html = renderPreambleHtml(law);

    // 本文（MainProvision）+ 附則（SupplProvision）をフラット化して順に描画
    const mainArts  = collectArticles(law?.LawBody?.MainProvision);
    const supplArts = toArray(law?.LawBody?.SupplProvision?.Article);
    const all = [...mainArts, ...supplArts];

    if (all.length) {
      html += all.map((art, i) => renderArticleHtml(art, String(i + 1))).join("");
    }

    return NextResponse.json(
      { ok: true, lawId, law: { title, html } },
      { headers: { "Cache-Control": "no-store" } }
    );
  } catch (e: any) {
    return NextResponse.json({ ok: false, error: String(e?.message ?? e) }, { status: 502 });
  }
}
